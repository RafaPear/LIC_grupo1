Index: Software/src/KBD.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import isel.leic.utils.Time\r\n\r\n// Ler teclas. Funcoes retornam '0'..'9','A'..'D','#','*' ou NONE.\r\nobject KBD {\r\n\tconst val NONE = 0.toChar();\r\n\tval CHAR_LIST = charArrayOf(\r\n\t\t'1', '2', '3', 'A',\r\n\t\t'4', '5', '6', 'B',\r\n\t\t'7', '8', '9', 'C',\r\n\t\t'*', '0', '#', 'D'\r\n\t)\r\n\r\n\t// Inicia a classe\r\n\tfun init() {\r\n\t\tHAL.init()\r\n\t}\r\n\r\n\t// Retorna de imediato a tecla premida ou NONE se nao ha tecla premida.\r\n\tfun getKey(): Char {\r\n\t\treturn if (HAL.isBit(0b0001_0000))\r\n\t\t\tCHAR_LIST[HAL.readBits(0b0000_1111)]\r\n\r\n\t\telse NONE\r\n\t}\r\n\r\n\tfun getKeyVal(): Int {\r\n\t\treturn if (HAL.isBit(0b0001_0000))\r\n\t\t\tHAL.readBits(0b0000_1111)\r\n\t\telse -1\r\n\t}\r\n\r\n\t// Retorna a tecla premida, caso ocorra antes do 'timeout' (em milissegundos),\r\n\t// ou NONE caso contrario.\r\n\tfun waitKey(timeout: Long): Char {\r\n\t\tval startTime = Time.getTimeInMillis()\r\n\t\twhile (startTime + timeout > Time.getTimeInMillis()) {\r\n\t\t\tval key = getKey()\r\n\t\t\tif (key != NONE) {\r\n\t\t\t\treturn key\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn NONE\r\n\t}\r\n\r\n\tfun waitKeyVal(timeout: Long): Int {\r\n\t\tval startTime = Time.getTimeInMillis()\r\n\t\twhile (startTime + timeout > Time.getTimeInMillis()) {\r\n\t\t\tval key = getKeyVal()\r\n\t\t\tif (key != -1) {\r\n\t\t\t\treturn key\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/KBD.kt b/Software/src/KBD.kt
--- a/Software/src/KBD.kt	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Software/src/KBD.kt	(date 1746612710098)
@@ -1,4 +1,5 @@
 import isel.leic.utils.Time
+import java.io.File
 
 // Ler teclas. Funcoes retornam '0'..'9','A'..'D','#','*' ou NONE.
 object KBD {
@@ -9,23 +10,45 @@
 		'7', '8', '9', 'C',
 		'*', '0', '#', 'D'
 	)
+	var valPins = 0b0001_0000
+	var kPins = 0b0000_1111
+	var configPath = "hardware.simul"
 
 	// Inicia a classe
 	fun init() {
 		HAL.init()
+		valPins = 0
+		kPins = 0
+		val file = File(configPath)
+
+		// Get the kbd pins and usb port pins from file
+		// the pins are stores in int binary format as for the example:
+		// UsbPort.I[2-3] means 0b0000_1100
+		//
+		// Format for kPins: kbd.K[0-1] -> UsbPort.I[2-3]
+		// Format for valPins: kbd.val -> UsbPort.I4
+		file.forEachLine { i ->
+			if (i.contains("kbd.K")) {
+				kPins += getInputPins(i)
+			} else if (i.contains("kbd.val")) {
+				valPins += getInputPins(i)
+			}
+		}
+		println("KBD: kPins = $kPins")
+		println("KBD: valPins = $valPins")
 	}
 
 	// Retorna de imediato a tecla premida ou NONE se nao ha tecla premida.
 	fun getKey(): Char {
-		return if (HAL.isBit(0b0001_0000))
-			CHAR_LIST[HAL.readBits(0b0000_1111)]
+		return if (HAL.isBit(valPins))
+			CHAR_LIST[HAL.readBits(kPins)]
 
 		else NONE
 	}
 
 	fun getKeyVal(): Int {
-		return if (HAL.isBit(0b0001_0000))
-			HAL.readBits(0b0000_1111)
+		return if (HAL.isBit(valPins))
+			HAL.readBits(kPins)
 		else -1
 	}
 
Index: Software/src/Math.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import kotlin.countOneBits\r\n\r\nfun pow(base: Int, exponent: Int): Int{\r\n    var temp = 1\r\n    for (i in 1..exponent){\r\n        temp = temp * base\r\n    }\r\n    return temp\r\n}\r\n\r\nfun Int.toBitPlace(): Int{\r\n    return pow(2, this)\r\n}\r\n\r\nfun Int.isBit(index: Int) : Boolean{\r\n    return and(1.shl(index)).countOneBits() == 1\r\n}\r\n\r\nfun Boolean.toInt(): Int{\r\n    return if (this) 1 else 0\r\n}\r\n\r\n//NOTE: transforma um booleano\r\nfun Boolean.toBit(mask:Int){\r\n    if (mask.countOneBits() == 1){\r\n        if (this) HAL.setBits(mask) else HAL.clrBits(mask)\r\n    } else error(\"Parameter 'mask' has a bit count different than 1.\")\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/Math.kt b/Software/src/Math.kt
--- a/Software/src/Math.kt	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Software/src/Math.kt	(date 1746610983330)
@@ -8,6 +8,7 @@
     return temp
 }
 
+
 fun Int.toBitPlace(): Int{
     return pow(2, this)
 }
Index: Software/src/LCD.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import isel.leic.utils.Time\r\nimport kotlin.text.iterator\r\n\r\n// Escreve no LCD usando a interface a 4 bits.\r\nobject LCD {\r\n    //para ter uma melhor noção por onde anda o cursor\r\n    var cursorPos: Pair<Int, Int> = Pair(0, 0) // (linha, coluna)\r\n\r\n    // Dimensão do display.\r\n    const val LINES = 2\r\n    const val COLS = 16\r\n    private const val NIBBLE = 3\r\n\r\n    // Define se a interface é Série ou Paralela.\r\n    private const val SERIAL_INTERFACE = true\r\n\r\n    var E_MASK = if (SERIAL_INTERFACE) 1 else 0b0010_0000\r\n    var RS_MASK = if (SERIAL_INTERFACE) 1 else 0b0001_0000\r\n    var NIBBLE_MASK = if (SERIAL_INTERFACE) 1 else 0b0000_1111\r\n\r\n    // Escreve um nibble de comando/dados no LCD em paralelo.\r\n    private fun writeNibbleParallel(rs: Boolean, data: Int) {\r\n        // Envia rs\r\n        rs.toBit(RS_MASK)\r\n\r\n        // Envia E On\r\n        HAL.setBits(E_MASK)\r\n\r\n        // Envia data\r\n        HAL.writeBits(NIBBLE_MASK, data)\r\n\r\n        // Envia E Off\r\n        HAL.clrBits(E_MASK)\r\n\r\n    }\r\n\r\n    // Escreve um nibble de comando/dados no LCD em série.\r\n    private fun writeNibbleSerial(rs: Boolean, data: Int) {\r\n        // Envia E On\r\n        HAL.setBits(E_MASK)\r\n        Time.sleep(1)\r\n\r\n        // Envia rs\r\n        HAL.writeBits(RS_MASK, rs.toInt())\r\n        Time.sleep(1)\r\n        // Envia data\r\n        var i = 0b0000_0001\r\n        while(i <= 0b0000_1000) {\r\n            HAL.writeBits(i, data)\r\n            i = i.shl(1)\r\n        }\r\n//        Envia E Off\r\n//        HAL.clrBits(E_MASK)\r\n    }\r\n\r\n    // Escreve um nibble de comando/dados no LCD.\r\n    private fun writeNibble(rs: Boolean, data: Int) {\r\n        if (SERIAL_INTERFACE)\r\n            writeNibbleSerial(rs, data)\r\n        else\r\n            writeNibbleParallel(rs, data)\r\n    }\r\n\r\n    // Escreve um byte de comando/dados no LCD.\r\n    private fun writeByte(rs: Boolean, data: Int) {\r\n        writeNibble(rs, data.rotateRight(4))\r\n        writeNibble(rs, data and 0b0000_1111)\r\n    }\r\n\r\n    // Escreve um comando no LCD.\r\n    private fun writeCMD(data: Int) {\r\n        writeByte(false, data)\r\n    }\r\n\r\n    // Escreve um dado no LCD.\r\n    private fun writeDATA(data: Int) {\r\n        writeByte(true, data)\r\n    }\r\n\r\n    // Envia a sequência de iniciação para comunicação a 4 bits.\r\n    fun init() {\r\n        HAL.init()\r\n        val time_list = longArrayOf(15, 5, 1)\r\n        val init_Code = intArrayOf(\r\n            0b0000_0011,\r\n            0b0000_0010,\r\n            0b0000_0010,\r\n            0b0000_1000,\r\n            0b0000_0000,\r\n            0b0000_1000,\r\n            0b0000_0000,\r\n            0b0000_0001,\r\n            0b0000_0000,\r\n            0b0000_0110,\r\n\r\n            0b0000_0001, // Clear display\r\n            0b0000_0010, // Return home\r\n            0b0000_1100 /// Cursor On / Blinking On\r\n        )\r\n\r\n        for (time in time_list) {\r\n            Time.sleep(time)\r\n            writeNibble(false, init_Code[0])\r\n        }\r\n\r\n        writeNibble(false, init_Code[1])\r\n\r\n        for (i in 2 until init_Code.size) {\r\n            writeByte(false, init_Code[i])\r\n        }\r\n    }\r\n\r\n    // Escreve um caractere na posição corrente.\r\n    fun write(c: Char, wrap: Boolean = true) {\r\n        writeDATA(c.code)\r\n        autoCursor(wrap)\r\n    }\r\n\r\n    // Escreve uma string na posição corrente.\r\n    fun write(text: String, wrap: Boolean = true) {\r\n        for (c in text) {\r\n            write(c, wrap)\r\n        }\r\n    }\r\n\r\n\r\n    // Envia comando para posicionar o cursor.\r\n    // (line: 0..LINES-1, column: 0..COLS-1)\r\n    fun cursor(line: Int, column: Int) {\r\n        if (line in 0 until LINES && column in 0 until COLS) {\r\n            val address = when (line) {\r\n                0 -> (column + 0b1000_0000)\r\n                1 -> (column + 0b1100_0000)\r\n                else -> 0\r\n            }\r\n            cursorPos = Pair(line, column)\r\n            writeCMD(address)\r\n        } else {\r\n            throw IllegalArgumentException(\"Posição Inválida.\")\r\n        }\r\n    }\r\n\r\n    // Envia comando para limpar o ecrã e posicionar o cursor em (0,0).\r\n    fun clear() { /* Implementação */\r\n        writeCMD(1)\r\n        cursorPos = Pair(0, 0)\r\n    }\r\n\r\n    fun autoCursor(wrap: Boolean) {\r\n        if (wrap && cursorPos.second >= LCD.COLS-1 && cursorPos.first == 0) cursor(1, 0)\r\n        else cursorPos = cursorPos.copy(second = cursorPos.second + 1)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/LCD.kt b/Software/src/LCD.kt
--- a/Software/src/LCD.kt	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Software/src/LCD.kt	(date 1746612754222)
@@ -12,7 +12,7 @@
     private const val NIBBLE = 3
 
     // Define se a interface é Série ou Paralela.
-    private const val SERIAL_INTERFACE = true
+    private const val SERIAL_INTERFACE = false
 
     var E_MASK = if (SERIAL_INTERFACE) 1 else 0b0010_0000
     var RS_MASK = if (SERIAL_INTERFACE) 1 else 0b0001_0000
Index: Software/src/Main.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import isel.leic.utils.Time\r\n\r\n//fun main() {\r\n//    TUI.init()\r\n//    TUI.capture()\r\n//}\r\nfun main(){\r\n    LCD.write('A')\r\n}\r\n/*\r\nvar read = false\r\n\r\nthread {\r\n    readln()\r\n    read = true\r\n}\r\nTUI.loadingScreen(500L) { read }\r\n*/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/Main.kt b/Software/src/Main.kt
--- a/Software/src/Main.kt	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Software/src/Main.kt	(date 1746612717998)
@@ -5,7 +5,9 @@
 //    TUI.capture()
 //}
 fun main(){
-    LCD.write('A')
+    TUI.init()
+    TUI.capture()
+//    LCD.write('A')
 }
 /*
 var read = false
Index: .idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48__Changes_.xml	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ /dev/null	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]" date="1743965315790" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 06/04/2025 19:48 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_06_04_2025_19_48_[Changes]/shelved.patch	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ /dev/null	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
@@ -1,477 +0,0 @@
-Index: Software/src/HAL.kt
-===================================================================
-diff --git a/Software/src/HAL.kt b/Software/src/HAL.kt
-deleted file mode 100644
---- a/Software/src/HAL.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,44 +0,0 @@
--import isel.leic.UsbPort
--
--object HAL {
--    // Guarda o valor do array de LEDs
--    var light = 0b0000_0000
--
--    // NOTE: Inicia o objeto
--    fun init(){
--        writeBits(0b1111_1111,light)
--    }
--
--    // NOTE: Retorna 'true' se o bit definido pela mask está com o valor lógico '1' no UsbPort
--    fun isBit(mask: Int): Boolean{
--        if (mask.countOneBits() == 1){
--            if (UsbPort.read().and(mask).countOneBits() == 1)
--                return true
--        }
--        return false
--    }
--
--    // NOTE: Retorna os valores dos bits representados por mask presentes no UsbPort
--    fun readBits(mask: Int): Int{
--        println(UsbPort.read().and(mask))
--        return UsbPort.read().and(mask)
--    }
--
--    // NOTE: Escreve nos bits representados por mask os valores dos bits correspondentes em value
--    fun writeBits(mask: Int, value: Int){
--        light = (mask.inv().and(light)).or(value.and(mask))
--        UsbPort.write(light)
--    }
--
--    // NOTE: Coloca os bits representados por mask no valor lógico '1'
--    fun setBits(mask: Int){
--        light = mask.or(light)
--        UsbPort.write(light)
--    }
--
--    // NOTE: Coloca os bits representados por mask no valor lógico '0'
--    fun clrBits(mask: Int){
--        light = mask.inv().and(light)
--        UsbPort.write(light)
--    }
--}
-\ No newline at end of file
-Index: Software/src/TUI.kt
-===================================================================
-diff --git a/Software/src/TUI.kt b/Software/src/TUI.kt
-deleted file mode 100644
---- a/Software/src/TUI.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,133 +0,0 @@
--import isel.leic.utils.Time
--
--fun main(){
--    TUI.init()
--    TUI.loadingScreen(500) {false}
--}
--
--object TUI {
--    private var canWrite: Boolean = true
--
--    fun init(){
--        KBD.init()
--        LCD.init()
--    }
--
--    fun capture(){
--        canWrite = true
--
--        while (true){
--            var key = KBD.getKey()
--
--            if (key == '*') {
--                LCD.clear()
--            }
--            else if (canWrite && key != KBD.NONE) {
--                LCD.write(key)
--                canWrite = false
--            }
--            else if (key == KBD.NONE)
--                canWrite = true
--        }
--    }
--
--    fun writeSplited(text: String) {
--
--        var count = 0
--        var words = text.split(Regex("(?<=\\s)|(?=\\s)"))
--        for (word in words) {
--            if (count + word.length > LCD.COLS) {
--                LCD.cursor(1, 0)
--                count = 0
--            }
--            for (i in word)
--                LCD.write(i)
--            count += word.length
--        }
--    }
--
--    fun writeRight(text: String) {
--
--        val newText = " ".repeat(LCD.COLS - text.length) + text
--
--        var count = 0
--
--        for (c in newText) {
--            LCD.write(c)
--        }
--    }
--
--
--    fun writeCenter(text: String) {
--
--        val words = text.split(Regex(" +"))
--        var line = ""
--
--        for (word in words) {
--            if (line.length + word.length >= LCD.COLS) {
--                val padding = (LCD.COLS - line.length) / 2
--                val centeredLine = " ".repeat(padding) + line.trim()
--                for (i in centeredLine)
--                    LCD.write(i)
--                LCD.cursor(1, 0)
--                line = ""
--            }
--
--            if (line.isNotEmpty()) {
--                line += " "
--            }
--            line += word
--        }
--
--        if (line.isNotEmpty()) {
--            val padding = (LCD.COLS - line.length) / 2
--            val centeredLine = " ".repeat(padding) + line.trim()
--            for (i in centeredLine)
--                LCD.write(i)
--        }
--    }
--
--    fun loadingScreen(time: Long, condition: () -> Boolean) {
--        LCD.clear()
--        writeCenter("Loading")
--
--        var i = 0
--        while (!condition()) {
--            LCD.write(".",false)
--
--            if (i == 3) {
--                i = -1
--                LCD.clear()
--                writeCenter("Loading")
--            }
--            i++
--            Time.sleep(time)
--        }
--        LCD.clear()
--    }
--
--    fun writeWalkText(time: Long, text: String) {
--        for (a in 0..text.length / 40) {
--            val newText = text.subSequence(0, ((a + 1) * 40).coerceIn(0, text.length)).toString()
--            for (i in a * 40 + 1 until (a + 1) * 40 + 1) {
--                if (LCD.COLS - i >= 0) {
--                    LCD.cursor(0, LCD.COLS - i)
--                    var count = 0
--                    for (c in newText) {
--                        LCD.write(c,false)
--                        count++
--                    }
--                } else {
--                    var count = 0
--                    for (c in newText) {
--                        LCD.write(c,false)
--                        count++
--                    }
--                }
--                Time.sleep(time)
--                LCD.clear()
--            }
--        }
--        Time.sleep(time)
--    }
--}
-\ No newline at end of file
-Index: Software/src/Main.kt
-===================================================================
-diff --git a/Software/src/Main.kt b/Software/src/Main.kt
-deleted file mode 100644
---- a/Software/src/Main.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,15 +0,0 @@
--import isel.leic.utils.Time
--
--fun main() {
--    TUI.init()
--}
--
--/*
--var read = false
--
--thread {
--    readln()
--    read = true
--}
--TUI.loadingScreen(500L) { read }
--*/
-Index: Software/src/LCD.kt
-===================================================================
-diff --git a/Software/src/LCD.kt b/Software/src/LCD.kt
-deleted file mode 100644
---- a/Software/src/LCD.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,158 +0,0 @@
--import isel.leic.utils.Time
--import kotlin.text.iterator
--
--// Escreve no LCD usando a interface a 4 bits.
--object LCD {
--	//para ter uma melhor noção por onde anda o cursor
--	var cursorPos: Pair<Int,Int> = Pair(0,0) // (linha, coluna)
--
--	// Dimensão do display.
--	const val LINES = 2
--	const val COLS = 16
--	private const val NIBBLE = 3
--
--	// Define se a interface é Série ou Paralela.
--	private const val SERIAL_INTERFACE = false
--
--	var E_MASK = if (SERIAL_INTERFACE) 1 else 0b0010_0000
--	var RS_MASK = if (SERIAL_INTERFACE) 1 else 0b0001_0000
--	var NIBBLE_MASK = if (SERIAL_INTERFACE) 1 else 0b0000_1111
--
--	// Escreve um nibble de comando/dados no LCD em paralelo.
--	private fun writeNibbleParallel(rs: Boolean, data: Int) {
--		// Envia rs
--        rs.toBit(RS_MASK)
--    
--		Time.sleep(1)
--
--		// Envia E On
--		HAL.setBits(E_MASK)
--
--		Time.sleep(1)
--
--		// Envia data
--		HAL.writeBits(NIBBLE_MASK, data)
--
--		Time.sleep(1)
--
--		// Envia E Off
--		HAL.clrBits(E_MASK)
--
--		Time.sleep(1)
--
--	}
--
--	// Escreve um nibble de comando/dados no LCD em série.
--	private fun writeNibbleSerial(rs: Boolean, data: Int) {
--		// Envia rs
--		HAL.writeBits(RS_MASK, rs.toInt())
--		// Envia E On
--		HAL.setBits(E_MASK)
--		// Envia data
--		for (i in NIBBLE..0) {
--			val bit = data.isBit(i)
--			HAL.writeBits(NIBBLE_MASK, bit.toInt())
--		}
--		// Envia E Off
--		HAL.clrBits(E_MASK)
--	}
--
--	// Escreve um nibble de comando/dados no LCD.
--	private fun writeNibble(rs: Boolean, data: Int) {
--		if (SERIAL_INTERFACE)
--			writeNibbleSerial(rs, data)
--		else
--			writeNibbleParallel(rs, data)
--	}
--
--	// Escreve um byte de comando/dados no LCD.
--	private fun writeByte(rs: Boolean, data: Int) {
--		writeNibble(rs, data.rotateRight(4))
--		writeNibble(rs, data and 0b0000_1111)
--	}
--
--	// Escreve um comando no LCD.
--	private fun writeCMD(data: Int) {
--		writeByte(false, data)
--	}
--
--	// Escreve um dado no LCD.
--	private fun writeDATA(data: Int) {
--		writeByte(true, data)
--	}
--
--	// Envia a sequência de iniciação para comunicação a 4 bits.
--	fun init() {
--		HAL.init()
--		val time_list = longArrayOf(15, 5, 1)
--		val init_Code = intArrayOf(
--			0b0000_0011,
--			0b0000_0010,
--			0b0000_0010,
--			0b0000_1000,
--			0b0000_0000,
--			0b0000_1000,
--			0b0000_0000,
--			0b0000_0001,
--			0b0000_0000,
--			0b0000_0110,
--
--			0b0000_0001, // Clear display
--			0b0000_0010, // Return home
--			0b0000_1100 /// Cursor On / Blinking On
--		)
--
--		for (time in time_list) {
--			Time.sleep(time)
--			writeNibble(false, init_Code[0])
--		}
--
--		writeNibble(false, init_Code[1])
--
--		for (i in 2 until init_Code.size) {
--			writeByte(false, init_Code[i])
--		}
--	}
--
--	// Escreve um caractere na posição corrente.
--	fun write(c: Char, wrap: Boolean = true) {
--		autoCursor(wrap)
--		writeDATA(c.code)
--	}
--
--	// Escreve uma string na posição corrente.
--	fun write(text: String, wrap: Boolean = true) {
--		for (c in text) {
--			write(c,wrap)
--		}
--	}
--
--
--
--	// Envia comando para posicionar o cursor.
--	// (line: 0..LINES-1, column: 0..COLS-1)
--	fun cursor(line: Int, column: Int) {
--		if (line in 0 until LINES && column in 0 until COLS) {
--			val address = when (line) {
--				0 -> (column + 0b1000_0000)
--				1 -> (column + 0b1100_0000)
--				else -> 0
--			}
--			cursorPos = Pair(line,column)
--			writeCMD(address)
--		} else {
--			throw IllegalArgumentException("Posição Inválida.")
--		}
--	}
--
--	// Envia comando para limpar o ecrã e posicionar o cursor em (0,0).
--	fun clear() { /* Implementação */
--		writeCMD(1)
--		cursorPos = Pair(0,0)
--	}
--
--	fun autoCursor(wrap: Boolean) {
--		if (wrap && cursorPos == Pair(0,16)) cursor(1,0)
--		else cursorPos = cursorPos.copy(second = cursorPos.second + 1)
--	}
--}
-Index: Software/src/KBD.kt
-===================================================================
-diff --git a/Software/src/KBD.kt b/Software/src/KBD.kt
-deleted file mode 100644
---- a/Software/src/KBD.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,55 +0,0 @@
--import isel.leic.utils.Time
--
--// Ler teclas. Funcoes retornam '0'..'9','A'..'D','#','*' ou NONE.
--object KBD {
--	const val NONE = 0.toChar();
--	val CHAR_LIST = charArrayOf(
--		'1', '2', '3', 'A',
--		'4', '5', '6', 'B',
--		'7', '8', '9', 'C',
--		'*', '0', '#', 'D'
--	)
--
--	// Inicia a classe
--	fun init() {
--		HAL.init()
--	}
--
--	// Retorna de imediato a tecla premida ou NONE se nao ha tecla premida.
--	fun getKey(): Char {
--		return if (HAL.isBit(0b0001_0000))
--			CHAR_LIST[HAL.readBits(0b0000_1111)]
--
--		else NONE
--	}
--
--	fun getKeyVal(): Int {
--		return if (HAL.isBit(0b0001_0000))
--			HAL.readBits(0b0000_1111)
--		else -1
--	}
--
--	// Retorna a tecla premida, caso ocorra antes do 'timeout' (em milissegundos),
--	// ou NONE caso contrario.
--	fun waitKey(timeout: Long): Char {
--		val startTime = Time.getTimeInMillis()
--		while (startTime + timeout > Time.getTimeInMillis()) {
--			val key = getKey()
--			if (key != NONE) {
--				return key
--			}
--		}
--		return NONE
--	}
--
--	fun waitKeyVal(timeout: Long): Int {
--		val startTime = Time.getTimeInMillis()
--		while (startTime + timeout > Time.getTimeInMillis()) {
--			val key = getKeyVal()
--			if (key != -1) {
--				return key
--			}
--		}
--		return -1
--	}
--}
-Index: Software/src/Math.kt
-===================================================================
-diff --git a/Software/src/Math.kt b/Software/src/Math.kt
-deleted file mode 100644
---- a/Software/src/Math.kt	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-+++ /dev/null	(revision 0ebd2eed8ae5b3a0f1c7be2748837f87a70a4a95)
-@@ -1,28 +0,0 @@
--import kotlin.countOneBits
--
--fun pow(base: Int, exponent: Int): Int{
--    var temp = 1
--    for (i in 1..exponent){
--        temp = temp * base
--    }
--    return temp
--}
--
--fun Int.toBitPlace(): Int{
--    return pow(2, this)
--}
--
--fun Int.isBit(index: Int) : Boolean{
--    return and(1.shl(index)).countOneBits() == 1
--}
--
--fun Boolean.toInt(): Int{
--    return if (this) 1 else 0
--}
--
--//NOTE: transforma um booleano
--fun Boolean.toBit(mask:Int){
--    if (mask.countOneBits() == 1){
--        if (this) HAL.setBits(mask) else HAL.clrBits(mask)
--    } else error("Parameter 'mask' has a bit count different than 1.")
--}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07__Changes_.xml	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ /dev/null	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]" date="1743991665850" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 07/04/2025 03:07 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="Software/out/production/Software/TUI.class" />
-    <option name="AFTER_PATH" value="Software/out/production/Software/TUI.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]/TUI.class" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="Software/out/production/Software/MainKt.class" />
-    <option name="AFTER_PATH" value="Software/out/production/Software/MainKt.class" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]/MainKt.class" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: Software/src/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/Utils.kt b/Software/src/Utils.kt
new file mode 100644
--- /dev/null	(date 1746612444737)
+++ b/Software/src/Utils.kt	(date 1746612444737)
@@ -0,0 +1,40 @@
+import KBD.kPins
+import java.io.File
+
+fun readFile(path: String): List<String>{
+    return File(path).readLines()
+}
+
+fun getInputPins(line: String): Int {
+    var result = 0
+    val badPins = line.split("->")[1]
+        .trim()
+        .removePrefix("UsbPort.I")
+        .removeSurrounding("[", "]")
+    try {
+        result += pow(2, badPins.toInt())
+    } catch (e: NumberFormatException) {
+        val badPins = badPins.split("-")
+        for (i in badPins[0].toInt()..badPins[1].toInt()) {
+            result += pow(2, i)
+        }
+    }
+    return result
+}
+
+fun getOutputPins(line: String): Int {
+    var result = 0
+    val badPins = line.split("->")[0]
+        .trim()
+        .removePrefix("UsbPort.O")
+        .removeSurrounding("[", "]")
+    try {
+        result += pow(2, badPins.toInt())
+    } catch (e: NumberFormatException) {
+        val badPins = badPins.split("-")
+        for (i in badPins[0].toInt()..badPins[1].toInt()) {
+            result += pow(2, i)
+        }
+    }
+    return result
+}
\ No newline at end of file
Index: Software/Simul.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Apr 06 23:09:23 WEST 2025\r\nSimDig=956,221\r\nSimDig_SIZE=781,648\r\nUsbPort_ICON=true\r\nUsbPort_SIZE=332,347\r\nd7s=284,1\r\ndec=160,1\r\nkbd=240,269\r\nkbd_ICON=false\r\nkit=105,227\r\nlcd=13,28\r\nlcd_ICON=false\r\nlcd_SIZE=607,200\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/Software/Simul.properties b/Software/Simul.properties
--- a/Software/Simul.properties	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Software/Simul.properties	(date 1746612803584)
@@ -1,5 +1,5 @@
-#Sun Apr 06 23:09:23 WEST 2025
-SimDig=956,221
+#Wed May 07 11:13:23 WEST 2025
+SimDig=492,98
 SimDig_SIZE=781,648
 UsbPort_ICON=true
 UsbPort_SIZE=332,347
Index: Hardware/SLCDC/SerialReceiver/Counter/Counter.vhd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>library ieee;\r\nuse ieee.std_logic_1164.all;\r\n\r\nentity Counter is\r\n    port(\r\n        RESET: in std_logic;\r\n        clr: in std_logic;\r\n        CLK: in std_logic;\r\n        Q: out std_logic_vector(2 downto 0)\r\n    );\r\nend Counter;\r\n\r\narchitecture arc_counter of Counter is\r\ncomponent ADDER2 is\r\n    port (\r\n\t\tA: in std_logic_vector (2 downto 0);\r\n\t\tB: in std_logic_vector (2 downto 0);\r\n\t\tCIN: in std_logic;\r\n\t\tS: out std_logic_vector (2 downto 0);\r\n\t\tCOUT: out std_logic\r\n\t);\r\nend component;\r\n\r\ncomponent REG2 is\r\n    port(\t\r\n\t\tD: in std_logic_vector(2 downto 0);\r\n\t\tRESET: in std_logic;\r\n        SET: in std_logic;\r\n\t\tEN: in std_logic;\r\n\t\tCLK: in std_logic;\r\n\t\tQ: out std_logic_vector(2 downto 0)\r\n\t);\r\nend component;\r\n\r\nsignal temp_S: std_logic_vector(2 downto 0);\r\nsignal temp_Q: std_logic_vector(2 downto 0);\r\n\r\nbegin\r\n\r\n    ADDER2_inst: ADDER2 port map(\r\n        A => \"000\",\r\n        B => temp_Q,\r\n        CIN => '1',\r\n        S => temp_S,\r\n        COUT => open\r\n    );\r\n\r\n    REG2_inst: REG2 port map(\r\n        D => temp_S,\r\n        RESET => RESET,\r\n        SET => '0',\r\n        EN => clr,\r\n        CLK => CLK,\r\n        Q => temp_Q\r\n    );\r\n\r\n    Q <= temp_Q;\r\nend arc_counter;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Hardware/SLCDC/SerialReceiver/Counter/Counter.vhd b/Hardware/SLCDC/SerialReceiver/Counter/Counter.vhd
--- a/Hardware/SLCDC/SerialReceiver/Counter/Counter.vhd	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Hardware/SLCDC/SerialReceiver/Counter/Counter.vhd	(date 1746012632538)
@@ -22,7 +22,7 @@
 end component;
 
 component REG2 is
-    port(	
+    port(
 		D: in std_logic_vector(2 downto 0);
 		RESET: in std_logic;
         SET: in std_logic;
@@ -34,9 +34,12 @@
 
 signal temp_S: std_logic_vector(2 downto 0);
 signal temp_Q: std_logic_vector(2 downto 0);
+signal reset_or_clr: std_logic;
 
 begin
 
+    reset_or_clr <= RESET or clr;
+
     ADDER2_inst: ADDER2 port map(
         A => "000",
         B => temp_Q,
@@ -47,9 +50,9 @@
 
     REG2_inst: REG2 port map(
         D => temp_S,
-        RESET => RESET,
+        RESET => reset_or_clr,
         SET => '0',
-        EN => clr,
+        EN => '1',
         CLK => CLK,
         Q => temp_Q
     );
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/Software/CanvasLib\" />\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/Software/src/FrontEnd\" />\r\n  </component>\r\n  <component name=\"PWA\">\r\n    <option name=\"enabled\" value=\"true\" />\r\n    <option name=\"wasEnabledAtLeastOnce\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"corretto-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/Software/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/.idea/misc.xml	(date 1746608431881)
@@ -8,7 +8,7 @@
     <option name="enabled" value="true" />
     <option name="wasEnabledAtLeastOnce" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/Software/out" />
   </component>
 </project>
\ No newline at end of file
Index: Hardware/SLCDC/SerialReceiver/SerialReceiver.vhd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>library ieee;\r\nuse ieee.std_logic_1164.all;\r\n\r\nentity SerialReceiver is\r\n    port(\r\n        SDX: in std_logic;\r\n        SCLK: in std_logic;\r\n        SS: in std_logic;\r\n        accept: in std_logic;\r\n        RESET: in std_logic;\r\n        D: out std_logic_vector(4 downto 0);\r\n        DX_val: out std_logic\r\n    );\r\nend SerialReceiver;\r\n\r\narchitecture arc_serialreceiver of SerialReceiver is\r\n\r\ncomponent ShiftRegister is\r\n    port(\r\n        CLK: in std_logic;\r\n        RESET: in std_logic;\r\n        D: in std_logic;\r\n        EN: in std_logic;\r\n        Q: out std_logic_vector(4 downto 0)\r\n    );\r\nend component;\r\n\r\ncomponent SerialControl is\r\n    port(\r\n        clk: in std_logic;\r\n        en_Rx: in std_logic;\r\n        pFlag: in std_logic;\r\n        dFlag: in std_logic;\r\n        RX_error: in std_logic;\r\n        accept: in std_logic;\r\n        init: out std_logic;\r\n        DX_val: out std_logic;\r\n        wr: out std_logic\r\n    );\r\nend component;\r\n\r\ncomponent ParityCheck is\r\n    port(\r\n        clk: in std_logic;\r\n        init: in std_logic;\r\n        data_in: in std_logic;\r\n        error: out std_logic\r\n    );\r\nend component;\r\n\r\ncomponent counter is\r\n    port(\r\n        RESET: in std_logic;\r\n        clr: in std_logic;\r\n        CLK: in std_logic;\r\n        Q: out std_logic_vector(2 downto 0)\r\n    );\r\nend component;\r\n\r\nsignal temp_wr: std_logic;\r\nsignal temp_init: std_logic;\r\nsignal temp_err: std_logic;\r\nsignal temp_pFlag: std_logic;\r\nsignal temp_dFlag: std_logic;\r\nsignal temp_Q_counter: std_logic_vector(2 downto 0);\r\nsignal five: std_logic_vector(2 downto 0) := \"101\";\r\nsignal six: std_logic_vector(2 downto 0) := \"110\";\r\n\r\nbegin\r\n\r\n    shiftRegister1: ShiftRegister port map(\r\n        CLK => SCLK,\r\n        RESET => RESET,\r\n        D => SDX,\r\n        EN => temp_wr,\r\n        Q => D\r\n    );\r\n\r\n    counter1: counter port map(\r\n        RESET => RESET,\r\n        clr => temp_init,\r\n        CLK => SCLK,\r\n        Q => temp_Q_counter\r\n    );\r\n\r\n    temp_dFlag <= (five(2) and temp_Q_counter(2)) and (five(1) nor temp_Q_counter(1)) and (five(0) and temp_Q_counter(0));\r\n    temp_pFlag <= (six(2) and temp_Q_counter(2)) and (six(1) and temp_Q_counter(1)) and (six(0) nor temp_Q_counter(0));\r\n\r\n    ParityCheck1: ParityCheck port map(\r\n        clk => SCLK,\r\n        init => temp_init,\r\n        data_in => SDX,\r\n        error => temp_err\r\n    );\r\n\r\n    SerialControl1: SerialControl port map(\r\n        clk => SCLK,\r\n        en_Rx => SS,\r\n        pFlag => temp_pFlag,\r\n        dFlag => temp_dFlag,\r\n        RX_error => temp_err,\r\n        accept => accept,\r\n        init => temp_init,\r\n        DX_val => DX_val,\r\n        wr => temp_wr\r\n    );\r\nend arc_serialreceiver;\r\n-- end Behavioral;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Hardware/SLCDC/SerialReceiver/SerialReceiver.vhd b/Hardware/SLCDC/SerialReceiver/SerialReceiver.vhd
--- a/Hardware/SLCDC/SerialReceiver/SerialReceiver.vhd	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Hardware/SLCDC/SerialReceiver/SerialReceiver.vhd	(date 1746012562350)
@@ -63,8 +63,6 @@
 signal temp_pFlag: std_logic;
 signal temp_dFlag: std_logic;
 signal temp_Q_counter: std_logic_vector(2 downto 0);
-signal five: std_logic_vector(2 downto 0) := "101";
-signal six: std_logic_vector(2 downto 0) := "110";
 
 begin
 
@@ -83,8 +81,11 @@
         Q => temp_Q_counter
     );
 
-    temp_dFlag <= (five(2) and temp_Q_counter(2)) and (five(1) nor temp_Q_counter(1)) and (five(0) and temp_Q_counter(0));
-    temp_pFlag <= (six(2) and temp_Q_counter(2)) and (six(1) and temp_Q_counter(1)) and (six(0) nor temp_Q_counter(0));
+    -- 5 101
+    -- 6 110
+
+    temp_dFlag <= temp_Q_counter(2) and not temp_Q_counter(1) and temp_Q_counter(0);
+    temp_pFlag <= temp_Q_counter(2) and temp_Q_counter(1) and temp_Q_counter(0);
 
     ParityCheck1: ParityCheck port map(
         clk => SCLK,
@@ -104,5 +105,4 @@
         DX_val => DX_val,
         wr => temp_wr
     );
-end arc_serialreceiver;
--- end Behavioral;
\ No newline at end of file
+end arc_serialreceiver;
\ No newline at end of file
Index: Hardware/SLCDC/SerialReceiver/Test-benches/SerialReceiver_tb.vhd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>library ieee;\r\nuse ieee.std_logic_1164.all;\r\nuse ieee.numeric_std.all;\r\n\r\nentity SerialReceiver_tb is\r\nend SerialReceiver_tb;\r\n\r\narchitecture test of tb_SerialReceiver is\r\n    component SerialReceiver is\r\n        port(\r\n            SDX: in  std_logic;\r\n            SCLK: in  std_logic;\r\n            SS: in  std_logic;\r\n            accept: in  std_logic;\r\n            RESET: in  std_logic;\r\n            D: out std_logic_vector(4 downto 0);\r\n            DX_val: out std_logic\r\n        );\r\n    end component;\r\n\r\n    signal s_SDX     : std_logic := '0';\r\n    signal s_SCLK    : std_logic := '0';\r\n    signal s_SS      : std_logic := '0';\r\n    signal s_accept  : std_logic := '0';\r\n    signal s_RESET   : std_logic := '0';\r\n    signal s_D       : std_logic_vector(4 downto 0);\r\n    signal s_DX_val  : std_logic;\r\n\r\n    constant MCLK_PERIOD : time := 20 ns;\r\n\r\nbegin\r\n    UUT: SerialReceiver\r\n        port map(\r\n            SDX => s_SDX,\r\n            SCLK => s_SCLK,\r\n            SS => s_SS,\r\n            accept => s_accept,\r\n            RESET => s_RESET,\r\n            D => s_D,\r\n            DX_val => s_DX_val\r\n        );\r\n\r\n    p_CLK_gen: process\r\n    begin\r\n        while true loop\r\n            s_SCLK <= '0';\r\n            wait for MCLK_PERIOD/2;\r\n            s_SCLK <= '1';\r\n            wait for MCLK_PERIOD/2;\r\n        end loop;\r\n    end process;\r\n\r\n    stim_proc: process\r\n    begin\r\n        s_RESET <= '1';\r\n        s_SS    <= '0';\r\n        s_accept <= '0';\r\n        wait for 5*MCLK_PERIOD;\r\n\r\n        s_RESET <= '0';\r\n        wait for 2*MCLK_PERIOD;\r\n\r\n        s_SS <= '1';\r\n        wait for 2*MCLK_PERIOD;\r\n\r\n\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n\r\n\r\n        -- Bit de paridade P (exemplo)\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n\r\n\r\n        wait for MCLK_PERIOD*2;\r\n\r\n        s_accept <= '1';\r\n        wait for MCLK_PERIOD;\r\n        s_accept <= '0';\r\n        wait for MCLK_PERIOD*2;\r\n\r\n        s_SS <= '0';\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD*5;\r\n\r\n        s_SS <= '1';\r\n        wait for MCLK_PERIOD*2;\r\n\r\n\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n        s_SDX <= '0';\r\n        wait for MCLK_PERIOD;\r\n\r\n        -- Bit de paridade (P) errado (por exemplo '1' se deveria ser '0')\r\n        s_SDX <= '1';\r\n        wait for MCLK_PERIOD;\r\n\r\n        -- Espera resultado\r\n        wait for MCLK_PERIOD*4;\r\n\r\n        wait;\r\n    end process;\r\n\r\nend test;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Hardware/SLCDC/SerialReceiver/Test-benches/SerialReceiver_tb.vhd b/Hardware/SLCDC/SerialReceiver/Test-benches/SerialReceiver_tb.vhd
--- a/Hardware/SLCDC/SerialReceiver/Test-benches/SerialReceiver_tb.vhd	(revision e5823d7df930a30f28a819e6b704d5a171ad05c5)
+++ b/Hardware/SLCDC/SerialReceiver/Test-benches/SerialReceiver_tb.vhd	(date 1746010957584)
@@ -5,7 +5,7 @@
 entity SerialReceiver_tb is
 end SerialReceiver_tb;
 
-architecture test of tb_SerialReceiver is
+architecture test of SerialReceiver_tb is
     component SerialReceiver is
         port(
             SDX: in  std_logic;
@@ -40,79 +40,61 @@
             DX_val => s_DX_val
         );
 
-    p_CLK_gen: process
-    begin
-        while true loop
-            s_SCLK <= '0';
-            wait for MCLK_PERIOD/2;
-            s_SCLK <= '1';
-            wait for MCLK_PERIOD/2;
-        end loop;
-    end process;
-
     stim_proc: process
     begin
         s_RESET <= '1';
         s_SS    <= '0';
+        s_SCLK  <= '0';
         s_accept <= '0';
-        wait for 5*MCLK_PERIOD;
 
+        wait for MCLK_PERIOD;
         s_RESET <= '0';
-        wait for 2*MCLK_PERIOD;
-
-        s_SS <= '1';
-        wait for 2*MCLK_PERIOD;
+        wait for MCLK_PERIOD;
+        -- Enviar RS = 0; data = 1101; P = 0;
 
-
-        s_SDX <= '1';
+        s_SCLK  <= '0';
         wait for MCLK_PERIOD;
-        s_SDX <= '0';
+        s_SDX   <= '0';
         wait for MCLK_PERIOD;
-        s_SDX <= '1';
+        s_SCLK  <= '1';
+        wait for MCLK_PERIOD;
+
+        s_SCLK  <= '0';
+        wait for MCLK_PERIOD;
+        s_SDX   <= '1';
         wait for MCLK_PERIOD;
-        s_SDX <= '0';
+        s_SCLK  <= '1';
+        wait for MCLK_PERIOD;
+
+        s_SCLK  <= '0';
         wait for MCLK_PERIOD;
-        s_SDX <= '1';
+        s_SDX   <= '1';
         wait for MCLK_PERIOD;
-
-
-        -- Bit de paridade P (exemplo)
-        s_SDX <= '0';
+        s_SCLK  <= '1';
         wait for MCLK_PERIOD;
 
-
-        wait for MCLK_PERIOD*2;
-
-        s_accept <= '1';
+        s_SCLK  <= '0';
         wait for MCLK_PERIOD;
-        s_accept <= '0';
-        wait for MCLK_PERIOD*2;
-
-        s_SS <= '0';
-        s_SDX <= '1';
-        wait for MCLK_PERIOD*5;
-
-        s_SS <= '1';
-        wait for MCLK_PERIOD*2;
-
-
-        s_SDX <= '0';
+        s_SDX   <= '0';
         wait for MCLK_PERIOD;
-        s_SDX <= '1';
+        s_SCLK  <= '1';
         wait for MCLK_PERIOD;
-        s_SDX <= '0';
+
+        s_SCLK  <= '0';
         wait for MCLK_PERIOD;
-        s_SDX <= '1';
+        s_SDX   <= '1';
         wait for MCLK_PERIOD;
-        s_SDX <= '0';
+        s_SCLK  <= '1';
+        wait for MCLK_PERIOD;
+
+        s_SCLK  <= '0';
         wait for MCLK_PERIOD;
-
-        -- Bit de paridade (P) errado (por exemplo '1' se deveria ser '0')
-        s_SDX <= '1';
+        s_SDX   <= '1';
         wait for MCLK_PERIOD;
+        s_SCLK  <= '1';
+        wait for MCLK_PERIOD;
 
-        -- Espera resultado
-        wait for MCLK_PERIOD*4;
+        s_SCLK  <= '0';
 
         wait;
     end process;
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_07_04_2025_03_07_[Changes]/shelved.patch
deleted file mode 100644
