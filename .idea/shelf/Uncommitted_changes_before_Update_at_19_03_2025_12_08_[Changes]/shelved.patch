Index: Software/USB_PORT.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ----------------------------------------\r\n# ---     DEVICE configuration         ---\r\n# ----------------------------------------\r\n# device            = de10lite\r\n# simulation        = false / true\r\n# simulation_target = java\r\n# file              = hardware.simul\r\n# ----------------------------------------\r\ndevice = de10lite\r\nsimulation = false\r\nsimulation_target = java\r\nfile = hardware.simul\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/Software/USB_PORT.properties b/Software/USB_PORT.properties
--- a/Software/USB_PORT.properties	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/Software/USB_PORT.properties	(date 1742385834915)
@@ -7,6 +7,6 @@
 # file              = hardware.simul
 # ----------------------------------------
 device = de10lite
-simulation = false
+simulation = true
 simulation_target = java
 file = hardware.simul
Index: Software/src/Main.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import kotlin.concurrent.thread\r\n\r\nfun main(){\r\n    HAL.init()\r\n    while (true){\r\n        val key = KBD.waitKeyVal(1000)\r\n\r\n        thread {\r\n            if (key == -1) {\r\n                HAL.setBits(0b1000_0000)\r\n                Thread.sleep(50)\r\n                HAL.clrBits(0b1000_0000)\r\n                Thread.sleep(50)\r\n            }\r\n        }\r\n\r\n        if (key != -1){\r\n            HAL.writeBits(0b1111_1111, key)\r\n        }\r\n        else {\r\n            HAL.writeBits(0b1111_1111, 0b1000_0000)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//HAL.init()\r\n//var value = 0b0000_0001\r\n//var isLeft = true\r\n//while(true) {\r\n////        Thread.sleep(1000)\r\n//    if (HAL.isBit(0b0000_0001)) {\r\n//        HAL.writeBits(0b1111_1111,value.inv())\r\n//        Thread.sleep(100)\r\n//        if (HAL.light == 0b0111_1111) {\r\n//            isLeft = false\r\n//        }\r\n//        if (HAL.light == 0b1111_1110) {\r\n//            isLeft = true\r\n//        }\r\n//        value = if (isLeft) {\r\n//            value.shl(1)\r\n//        } else\r\n//            value.shr(1)\r\n//    }\r\n//    else {\r\n//        HAL.clrBits(0b1111_1111)\r\n//        value = 0b0000_0001\r\n//        isLeft = true\r\n//    }\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/Main.kt b/Software/src/Main.kt
--- a/Software/src/Main.kt	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/Software/src/Main.kt	(date 1742386059740)
@@ -2,50 +2,7 @@
 
 fun main(){
     HAL.init()
-    while (true){
-        val key = KBD.waitKeyVal(1000)
-
-        thread {
-            if (key == -1) {
-                HAL.setBits(0b1000_0000)
-                Thread.sleep(50)
-                HAL.clrBits(0b1000_0000)
-                Thread.sleep(50)
-            }
-        }
+    LCD.init()
+    LCD.write('a')
 
-        if (key != -1){
-            HAL.writeBits(0b1111_1111, key)
-        }
-        else {
-            HAL.writeBits(0b1111_1111, 0b1000_0000)
-        }
-    }
-}
-
-
-//HAL.init()
-//var value = 0b0000_0001
-//var isLeft = true
-//while(true) {
-////        Thread.sleep(1000)
-//    if (HAL.isBit(0b0000_0001)) {
-//        HAL.writeBits(0b1111_1111,value.inv())
-//        Thread.sleep(100)
-//        if (HAL.light == 0b0111_1111) {
-//            isLeft = false
-//        }
-//        if (HAL.light == 0b1111_1110) {
-//            isLeft = true
-//        }
-//        value = if (isLeft) {
-//            value.shl(1)
-//        } else
-//            value.shr(1)
-//    }
-//    else {
-//        HAL.clrBits(0b1111_1111)
-//        value = 0b0000_0001
-//        isLeft = true
-//    }
-//}
\ No newline at end of file
+}
\ No newline at end of file
Index: Software/hardware.simul
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## --- Additional packages with Hardware to Simulator\r\npackage isel.leic.simul\r\nUsbPort = UsbPort\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/hardware.simul b/Software/hardware.simul
--- a/Software/hardware.simul	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/Software/hardware.simul	(date 1742382146458)
@@ -1,3 +1,21 @@
-## --- Additional packages with Hardware to Simulator
-package isel.leic.simul
+# Generic modules to activate from Simulator
 UsbPort = UsbPort
+kbd = Keyboard("123A456B789C*0#D",4,4,0)
+lcd     = LCD
+
+# --------------------------------------
+# KeyBoard Reader
+# --------------------------------------
+1 -> kbd.oe
+kbd.K[0-3] -> UsbPort.I[0-3]
+kbd.val -> UsbPort.I4
+UsbPort.O7 -> kbd.ack
+
+# --------------------------------------
+# LCD
+# --------------------------------------
+# Serial Receiver
+UsbPort.O[0-3] -> lcd.D[4-7]
+UsbPort.O4 -> lcd.rs
+UsbPort.O5 -> lcd.e
+
Index: Software/src/LCD.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Escreve no LCD usando a interface a 4 bits.\r\nobject LCD {\r\n    // Dimensão do display.\r\n    private const val LINES = 2\r\n    private const val COLS = 16\r\n    private const val NIBBLE = 3\r\n\r\n    // Define se a interface é Série ou Paralela.\r\n    private const val SERIAL_INTERFACE = false\r\n\r\n    var E_MASK = if (SERIAL_INTERFACE) 1 else 0b0010_0000\r\n    var RS_MASK = if (SERIAL_INTERFACE) 1 else 0b0001_0000\r\n    var NIBBLE_MASK = if (SERIAL_INTERFACE) 1 else 0b0000_1111\r\n\r\n    // Escreve um nibble de comando/dados no LCD em paralelo.\r\n    private fun writeNibbleParallel(rs: Boolean, data: Int) {\r\n        // Envia E On\r\n        HAL.setBits(E_MASK)\r\n\r\n        // Envia rs\r\n        HAL.writeBits(RS_MASK, rs.toInt())\r\n        HAL.writeBits(NIBBLE_MASK, data)\r\n\r\n        // Envia E Off\r\n        HAL.clrBits(E_MASK)\r\n    }\r\n\r\n    // Escreve um nibble de comando/dados no LCD em série.\r\n    private fun writeNibbleSerial(rs: Boolean, data: Int) {\r\n        // Envia E On\r\n        HAL.setBits(E_MASK)\r\n        // Envia rs\r\n        HAL.writeBits(RS_MASK, rs.toInt())\r\n        // Envia data\r\n        for (i in NIBBLE..0) {\r\n            val bit = data.isBit(i)\r\n            HAL.writeBits(NIBBLE_MASK, bit.toInt())\r\n        }\r\n        // Envia E Off\r\n        HAL.clrBits(E_MASK)\r\n    }\r\n\r\n    // Escreve um nibble de comando/dados no LCD.\r\n    private fun writeNibble(rs: Boolean, data: Int) {\r\n        if (data.countOneBits() < 5){\r\n            if (SERIAL_INTERFACE)\r\n                writeNibbleSerial(rs, data)\r\n            else\r\n                writeNibbleParallel(rs, data)\r\n        }\r\n    }\r\n\r\n    // Escreve um byte de comando/dados no LCD.\r\n    private fun writeByte(rs: Boolean, data: Int) {\r\n        writeNibble(rs, data shr 4)\r\n        writeNibble(rs, data and 0b0000_1111)\r\n    }\r\n\r\n    // Escreve um comando no LCD.\r\n    private fun writeCMD(data: Int) {\r\n        writeByte(false, data)\r\n    }\r\n\r\n    // Escreve um dado no LCD.\r\n    private fun writeDATA(data: Int) {\r\n        writeByte(true, data)\r\n    }\r\n\r\n    // Envia a sequência de iniciação para comunicação a 4 bits.\r\n    fun init() { /* Implementação */ }\r\n\r\n    // Escreve um caractere na posição corrente.\r\n    fun write(c: Char) {\r\n        writeDATA(c.code)\r\n    }\r\n\r\n    // Escreve uma string na posição corrente.\r\n    fun write(text: String) {\r\n        var count = 0\r\n        for (c in text) {\r\n            if (count == COLS) {\r\n                cursor(1, 0)\r\n                count = 0\r\n            }\r\n            write(c)\r\n            count++\r\n        }\r\n    }\r\n\r\n    // Envia comando para posicionar o cursor.\r\n    // (line: 0..LINES-1, column: 0..COLS-1)\r\n    fun cursor(line: Int, column: Int) { /* Implementação */\r\n        if (line in 0 until LINES && column in 0 until COLS) {\r\n            val address = when (line) {\r\n                0 -> column // 1.ª linha\r\n                1 -> (column + 0b0100_0000) // 0b0100_0000 -> 64, passa para a próx. linha\r\n                else -> throw IllegalArgumentException(\"Linha Inválida.\") // exceção\r\n            }\r\n            writeCMD(0b1000_0000 or address)\r\n            println(\"Posição do Cursor: $line, $column\")\r\n        }\r\n        else {\r\n            throw IllegalArgumentException (\"Posição Inválida.\")\r\n        }\r\n    }\r\n\r\n    // Envia comando para limpar o ecrã e posicionar o cursor em (0,0).\r\n    fun clear() { /* Implementação */\r\n        writeCMD(0b0000_0001)\r\n        println(\"LCD limpo e cursor posicionado em (0,0)\")\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Software/src/LCD.kt b/Software/src/LCD.kt
--- a/Software/src/LCD.kt	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/Software/src/LCD.kt	(date 1742385549496)
@@ -89,14 +89,14 @@
 
     // Envia comando para posicionar o cursor.
     // (line: 0..LINES-1, column: 0..COLS-1)
-    fun cursor(line: Int, column: Int) { /* Implementação */
+    fun cursor(line: Int, column: Int) {
         if (line in 0 until LINES && column in 0 until COLS) {
             val address = when (line) {
                 0 -> column // 1.ª linha
                 1 -> (column + 0b0100_0000) // 0b0100_0000 -> 64, passa para a próx. linha
-                else -> throw IllegalArgumentException("Linha Inválida.") // exceção
+                else -> 0
             }
-            writeCMD(0b1000_0000 or address)
+            writeCMD(address)
             println("Posição do Cursor: $line, $column")
         }
         else {
@@ -106,7 +106,8 @@
 
     // Envia comando para limpar o ecrã e posicionar o cursor em (0,0).
     fun clear() { /* Implementação */
-        writeCMD(0b0000_0001)
+        writeCMD(1)
+        cursor(0,0)
         println("LCD limpo e cursor posicionado em (0,0)")
     }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/Software/CanvasLib\" />\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/Software/src/FrontEnd\" />\r\n  </component>\r\n  <component name=\"PWA\">\r\n    <option name=\"enabled\" value=\"true\" />\r\n    <option name=\"wasEnabledAtLeastOnce\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"corretto-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/Software/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/.idea/misc.xml	(date 1742384842083)
@@ -8,7 +8,7 @@
     <option name="enabled" value="true" />
     <option name="wasEnabledAtLeastOnce" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/Software/out" />
   </component>
 </project>
\ No newline at end of file
Index: Software/Simul.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sat Mar 15 22:19:40 WET 2025\r\nSimDig=907,185\r\nSimDig_SIZE=478,508\r\nUsbPort_ICON=false\r\nUsbPort_SIZE=332,347\r\nd7s=284,1\r\ndec=160,1\r\nkit=105,227\r\nlcd=0,217\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/Software/Simul.properties b/Software/Simul.properties
--- a/Software/Simul.properties	(revision 7468b752a1994621b9af73b7f195b058cf5e0f73)
+++ b/Software/Simul.properties	(date 1742386009910)
@@ -1,4 +1,4 @@
-#Sat Mar 15 22:19:40 WET 2025
+#Wed Mar 19 12:06:49 WET 2025
 SimDig=907,185
 SimDig_SIZE=478,508
 UsbPort_ICON=false
